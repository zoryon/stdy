generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  username   String
  avatar_url String?
  email      String     @unique
  notebook   notebook[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model note {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  title       String   @default("Unititled") @db.VarChar
  file_path   String
  notebook_id String   @db.Uuid
  notebook    notebook @relation(fields: [notebook_id], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notebook {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  owner_id   String   @db.Uuid
  title      String   @default("New Notebook") @db.VarChar
  note       note[]
  user       user     @relation(fields: [owner_id], references: [id], onDelete: Cascade)
}
